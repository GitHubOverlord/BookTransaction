<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE struts PUBLIC "-//Apache Software Foundation//DTD Struts Configuration 2.3//EN" "http://struts.apache.org/dtds/struts-2.3.dtd">
<struts>
	<!-- 是否启用开发模式 -->
	<constant name="struts.devMode" value="true" />
	<!-- struts配置文件改动后，是否重新加载 -->
	<constant name="struts.configuration.xml.reload" value="true" />
	<!-- 设置浏览器是否缓存静态内容 -->
	<constant name="struts.serve.static.browserCache" value="false" />
	<!-- 请求参数的编码方式 -->
	<constant name="struts.i18n.encoding" value="utf-8" />
	<!-- 每次HTTP请求系统都重新加载资源文件，有助于开发 -->
	<constant name="struts.i18n.reload" value="true" />
	<!-- 文件上传最大值 -->
	<constant name="struts.multipart.maxSize" value="1073741824" />
	<!-- 让struts2支持动态方法调用 -->
	<constant name="struts.enable.DynamicMethodInvocation" value="true" />
	<!-- Action名称中是否还是用斜线 -->
	<constant name="struts.enable.SlashesInActionNames" value="false" />
	<!-- 允许标签中使用表达式语法 -->
	<constant name="struts.tag.altSyntax" value="true" />
	<!-- 对于WebLogic,Orion,OC4J此属性应该设置成true -->
	<constant name="struts.dispatcher.parametersWorkaround" value="false" />
	<!-- 默认使用简单的界面主题 -->
	<constant name="struts.ui.theme" value="simple" />
	<!-- 指定国际化资源文件的baseName为uploadFile -->
	<constant name="struts.custom.i18n.resources" value="uploadFile"></constant>
	<package name="user" extends="json-default">
		<interceptors>
			<interceptor name="customerAuthority"
				class="com.jun.file.interceptor.CustomerLoginInterceptor">
			</interceptor>

			<!-- 拦截器栈 -->
			<interceptor-stack name="userLogin">
				<interceptor-ref name="defaultStack" />
				<interceptor-ref name="customerAuthority" />
			</interceptor-stack>

		</interceptors>

		<action name="loginAction" class="com.jun.book.servlet.UserAction"
			method="login">
			<result type="json"></result>
		</action>
		<action name="registerAction" class="com.jun.book.servlet.UserAction"
			method="register">
			<result type="json"></result>
		</action>
		<action name="loginOutAction" class="com.jun.book.servlet.UserAction"
			method="loginOut">
			<result type="json"></result>
		</action>
		<action name="updateUserMessageAction" class="com.jun.book.servlet.UserAction"
			method="updateUserMessage">
			<result type="json"></result>
		</action>
		<action name="getUserMessage" class="com.jun.book.servlet.UserAction"
			method="getUserMessage">
			<result type="json"></result>
		</action>
		<action name="getAllDepartmentAndMajor" class="com.jun.book.servlet.DepartmentAndMajorAction"
			method="getAllDeaprtmentAndMajor">
			<result type="json"></result>
		</action>
		<action name="insertDepartmentAndMajor" class="com.jun.book.servlet.DepartmentAndMajorAction"
			method="createDepartmentAndMajor">
			<result type="json"></result>
		</action>
		<action name="createProject" class="com.jun.book.servlet.ProjectAction"
			method="createProject">
			<result type="json"></result>
		</action>
		<action name="insertProject" class="com.jun.book.servlet.ProjectAction"
			method="insertProject">
			<result type="json"></result>
		</action>
		<action name="findAllProject" class="com.jun.book.servlet.ProjectAction"
			method="findAllProject">
			<result type="json"></result>
		</action>
		<action name="findProjectByMajorId" class="com.jun.book.servlet.ProjectAction"
			method="findProjectByMajorId">
			<result type="json"></result>
		</action>
		<action name="publishOrder" class="com.jun.book.servlet.OrderAction"
			method="publishOrder">
			<result type="json"></result>
		</action>
		<action name="getMyOrder" class="com.jun.book.servlet.OrderAction"
			method="getMyOrder">
			<result type="json"></result>
		</action>
		<action name="createOrder" class="com.jun.book.servlet.OrderAction"
			method="createOrder">
			<result type="json"></result>
		</action>
		<action name="setPublishOrderStatus" class="com.jun.book.servlet.OrderAction"
			method="setPublishOrderStatus">
			<result type="json"></result>
		</action>
		<action name="getAllOrderByCondition" class="com.jun.book.servlet.OrderAction"
			method="getAllOrderByCondition">
			<result type="json"></result>
		</action>
		<action name="searchOrder" class="com.jun.book.servlet.OrderAction"
			method="searchOrder">
			<result type="json"></result>
		</action>

	</package>
</struts>
